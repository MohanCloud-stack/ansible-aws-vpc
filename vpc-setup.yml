- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      ansible.builtin.include_vars:
              dir: vars
              files_matching: vpc_setup.yaml

    - name: Create vprofile VPC
      ec2_vpc_net:
              name: "{{vpc_name}}"
              cidr_block: "{{vpcCidr}}"
              region: "{{region}}"
              dns_support: yes
              dns_hostnames: yes
              tenancy: default
              state: "{{state}}"
      register: vpcout
    
    - debug:
       var: vpcout


    - name: create Public Subnet 1 in Zone1 
      ec2_vpc_subnet: 
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          az: "{{zone1}}"
          state: "{{state}}"
          cidr: "{{PubSub1Cidr}}"
          map_public: yes
          resource_tags:
            Name: vprofile-pubsub1
      register: pubsub1_out

    - name: create Public Subnet 2 in Zone2 
      ec2_vpc_subnet: 
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          az: "{{zone2}}"
          state: "{{state}}"
          cidr: "{{PubSub2Cidr}}"
          map_public: yes
          resource_tags:
            Name: vprofile-pubsub2
      register: pubsub2_out

    - name: create Public Subnet 3 in Zone3 
      ec2_vpc_subnet: 
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          az: "{{zone3}}"
          state: "{{state}}"
          cidr: "{{PubSub3Cidr}}"
          map_public: yes
          resource_tags:
            Name: vprofile-pubsub3
      register: pubsub3_out

    - name: create Private Subnet 1 in Zone1 
      ec2_vpc_subnet: 
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          az: "{{zone1}}"
          state: "{{state}}"
          cidr: "{{PriSub1Cidr}}"
          map_public: yes
          resource_tags:
            Name: vprofile-prisub1
      register: prisub1_out

    - name: create Private Subnet 2 in Zone2 
      ec2_vpc_subnet: 
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          az: "{{zone2}}"
          state: "{{state}}"
          cidr: "{{PriSub2Cidr}}"
          map_public: yes
          resource_tags:
            Name: vprofile-prisub2
      register: prisub2_out

    - name: create Private Subnet 3 in Zone3 
      ec2_vpc_subnet: 
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{region}}"
          az: "{{zone3}}"
          state: "{{state}}"
          cidr: "{{PriSub3Cidr}}"
          map_public: yes
          resource_tags:
            Name: vprofile-prisub3
      register: prisub3_out
  
    - name: Create Internet gateway with tags
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
         Name: vprofile-Internetgateway
      register: igw_out

    - name: Set Up Public Subnet RouteTable
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        resource_tags:
          Name: vprofile-PubRT
        subnets:
          - "{{pubsub1_out.subnet.id}}"
          - "{{pubsub2_out.subnet.id}}"
          - "{{pubsub3_out.subnet.id}}"
        routes: 
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_out.gateway_id}}"
      register: pubRT_out
    
    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
         state: "{{state}}"
         subnet_id: "{{pubsub1_out.subnet.id}}"
         wait: yes
         region: "{{region}}"
         if_exist_do_not_create: true
      register: NATGW_out
    
    - name: Set Up Private Subnet RouteTable
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        resource_tags:
          Name: vprofile-PrivRT
        subnets:
          - "{{prisub1_out.subnet.id}}"
          - "{{prisub2_out.subnet.id}}"
          - "{{prisub3_out.subnet.id}}"
        routes: 
          - dest: 0.0.0.0/0
            gateway_id: "{{NATGW_out.nat_gateway_id}}"
      register: privRT_out
    
    - debug:
        var: "{{item}}"
      loop:
      - vpcout.vpc.id 
      - pubsub1_out.subnet.id
      - pubsub2_out.subnet.id
      - pubsub3_out.subnet.id
      - prisub1_out.subnet.id
      - prisub2_out.subnet.id
      - prisub3_out.subnet.id
      - igw_out.gateway_id
      - pubRT_out.route_table.id
      - NATGW_out.nat_gateway_id
      - privRT_out.route_table.id
    
    - set_fact:
       vpcid: "{{vpcout.vpc.id}}"
       pubsub1id: "{{pubsub1_out.subnet.id}}"
       pubsub2id: "{{pubsub2_out.subnet.id}}"
       pubsub3id: "{{pubsub3_out.subnet.id}}"
       privsub1id: "{{privsub1_out.subnet.id}}"
       privsub2id: "{{privsub2_out.subnet.id}}"
       privsub3id: "{{privsub3_out.subnet.id}}"
       igwid: "{{igw_out.gateway_id}}"
       pubRTid: "{{pubRT_out.route_table.id}}"
       NATGWid: "{{NATGW_out.nat_gateway_id}}"
       privRTid: "{{privRT_out.route_table.id}}"
       cacheable: yes
    
    - name:  Create variables file for vpc output
      copy:
       content: "vpcid:{{vpcout.vpc.id}}\n pubsub1id: {{pubsub1_out.subnet.id}} \n pubsub2id: {{pubsub2_out.subnet.id}} \n pubsub3id: {{pubsub3_out.subnet.id}} \n "
       dest: vars/output_vars
